{"version":3,"file":"static/js/927.7cd615e0.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Phonebook/ContactForm/ContactForm.module.css?f727","components/Phonebook/ContactForm/ContactForm.jsx","components/Phonebook/ContactList/ContactList.jsx","redux/filter/filter-selectors.js","components/Phonebook/Filter/Filter.jsx","components/Phonebook/Phonebook.jsx","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__xMklr\",\"label\":\"ContactForm_label__YXYvo\"};","import { useState } from 'react';\nimport { Button, Typography } from '@mui/material';\n\nimport css from 'components/Phonebook/ContactForm/ContactForm.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\n\nimport { getAllContacts } from 'redux/contacts/contacts-selectors';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\n\nconst ContactForm = () => {\n  const [state, setState] = useState(INITIAL_STATE);\n  const dispatch = useDispatch();\n  const AllContacts = useSelector(getAllContacts);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setState(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const data = state;\n\n    const normalizedName = data.name.toLowerCase();\n    const isRepeatedContact = AllContacts.some(\n      contact => contact.name.toLowerCase() === normalizedName\n    );\n    if (isRepeatedContact) {\n      const alertString = data.name + ' is already in contacts.';\n      alert(alertString);\n      return;\n    }\n    dispatch(addContact({ ...data }));\n    setState(INITIAL_STATE);\n  };\n\n  return (\n    <>\n      <Typography\n        variant=\"h4\"\n        component=\"h4\"\n        sx={{\n          p: 1,\n        }}\n      >\n        Phonebook\n      </Typography>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <label className={css.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={state.name}\n            onChange={handleChange}\n          />\n        </label>\n        <label className={css.label}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={state.number}\n            onChange={handleChange}\n          />\n        </label>\n        <Button type=\"submit\" sx={{ mt: 1 }}>\n          Add contact\n        </Button>\n      </form>\n      {/* <Box\n        component=\"form\"\n        sx={{\n          '& .MuiTextField-root': { m: 1, width: 400 },\n        }}\n        onSubmit={handleSubmit}\n        noValidate\n        autoComplete=\"off\"\n      >\n        <div>\n          {' '}\n          <TextField\n            id=\"outlined-name-input\"\n            label=\"name\"\n            type=\"text\"\n            name=\"name\"\n            required\n            value={state.name}\n            onChange={handleChange}\n          />\n        </div>\n        <div>\n          <TextField\n            id=\"outlined-number-input\"\n            label=\"tel number\"\n            type=\"number\"\n            name=\"number\"\n            required\n            inputProps={{ inputMode: 'numeric', pattern: '[0-9]*' }}\n            value={state.number}\n            onChange={handleChange}\n          />\n        </div>\n        <Button type=\"submit\"> Add contact</Button>\n      </Box> */}\n    </>\n  );\n};\n\nexport default ContactForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport {\n  List,\n  Box,\n  ListItem,\n  Typography,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n} from '@mui/material';\n\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nimport { deleteContact } from 'redux/contacts/operations';\nimport { getFilteredContacts } from 'redux/contacts/contacts-selectors';\n\n// import css from 'components/Phonebook/phonebook.module.css';\n\nconst ContactList = () => {\n  const contacts = useSelector(getFilteredContacts);\n\n  const dispatch = useDispatch();\n\n  const onDeleteContact = idForDelete => {\n    dispatch(deleteContact(idForDelete));\n  };\n\n  return (\n    <>\n      <Typography\n        variant=\"h4\"\n        component=\"h4\"\n        sx={{\n          p: 1,\n          pt: 3,\n        }}\n      >\n        Contacts\n      </Typography>\n\n      <Box\n        sx={{\n          width: '100%',\n          maxWidth: 450,\n          bgcolor: 'background.paper',\n          justifyContent: 'space-between',\n          pl: 2,\n        }}\n      >\n        <List>\n          {contacts.map(({ id, name, number }) => (\n            <ListItem key={id} disablePadding>\n              <ListItemText sx={{ flexGrow: 1 }}>\n                {name} {number}\n              </ListItemText>\n              <ListItemButton\n                type=\"button\"\n                color=\"\"\n                onClick={() => onDeleteContact(id)}\n                sx={{\n                  p: 1,\n                  justifyContent: 'right',\n                  maxWidth: 110,\n                }}\n              >\n                <Typography variant=\"subtitle2\">Delete</Typography>\n                <ListItemIcon>\n                  <DeleteIcon />\n                </ListItemIcon>\n              </ListItemButton>\n            </ListItem>\n          ))}\n        </List>\n      </Box>\n    </>\n  );\n};\n\nexport default ContactList;\n\n// return (\n//   <>\n//     <h2 className={css.title}>Contacts</h2>\n//     <ul className={css.buttonWrapper}>\n//       {contacts.map(({ id, name, number }) => (\n//         <li key={id} className={css.contact}>\n//           <p className={css.text}>\n//             {name} {number}\n//           </p>\n//           <button\n//             type=\"button\"\n//             className={css.btnDel}\n//             onClick={() => onDeleteContact(id)}\n//           >\n//             Delete\n//           </button>\n//         </li>\n//       ))}\n//     </ul>\n//   </>\n// );\n","export const getFilter = ({ filter }) => filter;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { TextField, Box } from '@mui/material';\n\nimport { setFilter } from 'redux/filter/filter-slice';\nimport { getFilter } from 'redux/filter/filter-selectors';\n\n// import css from 'components/Phonebook/phonebook.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const handleChange = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n\n  return (\n    <>\n      <Box\n        component=\"form\"\n        sx={{\n          '& .MuiTextField-root': { m: 1, width: 400 },\n        }}\n        // onSubmit={handleSubmit}\n        noValidate\n        autoComplete=\"off\"\n      >\n        <div>\n          {' '}\n          <TextField\n            id=\"outlined-filter-input\"\n            label=\"Find a contact by name\"\n            type=\"text\"\n            name=\"filter\"\n            required\n            value={filter}\n            onChange={handleChange}\n          />\n        </div>\n      </Box>\n      {/* <form className={css.buttonWrapper}>\n        <label className={css.text}>\n          Find a contact by name\n          <input\n            type=\"text\"\n            name=\"filter\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={filter}\n            onChange={handleChange}\n          />\n        </label>\n      </form> */}\n    </>\n  );\n};\n\nexport default Filter;\n\n// return (\n//   <>\n//     <form className={css.buttonWrapper}>\n//       <label className={css.text}>\n//         Find a contact by name\n//         <input\n//           type=\"text\"\n//           name=\"filter\"\n//           pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//           title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//           required\n//           value={filter}\n//           onChange={handleChange}\n//         />\n//       </label>\n//     </form>\n//   </>\n// );\n","import { useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Container } from '@mui/material';\n\nimport { fetchContacts } from 'redux/contacts/operations';\nimport LinearIndeterminate from 'services/LinearIndeterminate';\n\n// import css from './phonebook.module.css';\nimport ContactForm from 'components/Phonebook/ContactForm/ContactForm';\nimport ContactList from 'components/Phonebook/ContactList/ContactList';\nimport Filter from 'components/Phonebook/Filter/Filter';\n// import Loader from 'components/Phonebook/Loader/Loader';\n\nimport {\n  getFilteredContacts,\n  getIsLoading,\n  getError,\n} from 'redux/contacts/contacts-selectors';\n\nconst Phonebook = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filteredContacts = useSelector(getFilteredContacts);\n  const isContacts = Boolean(filteredContacts.length);\n\n  return (\n    <Container>\n      <ContactForm />\n      <Filter />\n      {isLoading && !error && <LinearIndeterminate />}\n      {isContacts && <ContactList />}\n      {!isContacts && !isLoading && <p>No contacts in the list</p>}\n    </Container>\n  );\n};\n\nexport default Phonebook;\n","import Phonebook from 'components/Phonebook/Phonebook';\nimport { Container } from '@mui/material';\n\nexport default function Contacts() {\n  return (\n    <Container>\n      <Phonebook />\n    </Container>\n  );\n}\n"],"names":["INITIAL_STATE","name","number","useState","state","setState","dispatch","useDispatch","AllContacts","useSelector","getAllContacts","handleChange","e","target","value","prevState","Typography","variant","component","sx","p","className","css","onSubmit","evt","preventDefault","data","normalizedName","toLowerCase","some","contact","alertString","alert","addContact","type","pattern","title","required","onChange","Button","mt","contacts","getFilteredContacts","pt","Box","width","maxWidth","bgcolor","justifyContent","pl","List","map","id","ListItem","disablePadding","ListItemText","flexGrow","ListItemButton","color","onClick","idForDelete","deleteContact","ListItemIcon","Delete","getFilter","filter","m","noValidate","autoComplete","TextField","label","setFilter","currentTarget","isLoading","getIsLoading","error","getError","useEffect","fetchContacts","filteredContacts","isContacts","Boolean","length","Container","LinearIndeterminate","Contacts"],"sourceRoot":""}